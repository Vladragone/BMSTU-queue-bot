# queues.py
from typing import Dict, List

class QueueManager:
    def __init__(self):
        self.queues: Dict[str, List[str]] = {}
        self.active_subjects: List[str] = []
        self.active = False
        self.message_id = None

    def open(self, subjects: List[str]):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –æ—á–µ—Ä–µ–¥–∏ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤"""
        self.active = True
        self.active_subjects = subjects
        self.queues = {subj: [] for subj in subjects}

    def close(self):
        """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç –ø—Ä–∏—ë–º –∑–∞—è–≤–æ–∫"""
        self.active = False
        self.active_subjects = []

    def add_user(self, subject: str, user_name: str) -> bool:
        """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ—á–µ—Ä–µ–¥—å"""
        if subject not in self.active_subjects:
            return False
        queue = self.queues.setdefault(subject, [])
        if user_name in queue:
            return False
        queue.append(user_name)
        return True

    def format_text(self) -> str:
        if not self.active:
            return "‚ùå –û—á–µ—Ä–µ–¥—å –∑–∞–∫—Ä—ã—Ç–∞"

        text = "üïê *–û—Ç–∫—Ä—ã—Ç–∞ –æ—á–µ—Ä–µ–¥—å –Ω–∞ –∑–∞–ø–∏—Å—å!*\n"
        text += "–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞–ø–∏—à–∏—Ç–µ !" + " –∏–ª–∏ !".join(self.active_subjects) + "\n\n"

        for subj in self.active_subjects:
            text += f"üìò *–û—á–µ—Ä–µ–¥—å –Ω–∞ {subj}:*\n"
            queue = self.queues.get(subj, [])
            if queue:
                text += "\n".join([f"{i+1}. {name}" for i, name in enumerate(queue)]) + "\n\n"
            else:
                text += "‚Äî –ø–æ–∫–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç ‚Äî\n\n"
        return text.strip()
